name: Pushing to Keboola
description: Pushing to Keboola
inputs:
  workdir:
    description: Working directory
    required: true
  kbcSapiHost:
    description: Keboola Connection Stack URL
    required: true
  kbcSapiToken:
    description: Keboola Connection Storage API Token
    required: true
  kbcProjectId:
    description: Keboola Connection Project ID
    required: true
  kbcBranchId:
    description: Keboola Connection Branch ID
    required: true
  forcePush:
    description: Enable force push
    required: false
runs:
  using: "composite"
  steps:
    # Pull remote project's state
    - name: Push to Keboola Connection
      env:
        # filled by the script
        KBC_STORAGE_API_TOKEN: ${{ inputs.kbcSapiToken }}
        KBC_PROJECT_ID: ${{ inputs.kbcProjectId }}
        KBC_BRANCH_ID: ${{ inputs.kbcBranchId }}
        KBC_STORAGE_API_HOST: ${{ inputs.kbcSapiHost }}
        WORKDIR: ${{ inputs.workdir }}
      # filled by the script
      id: kbc_push
      run: |
        set -eo pipefail

        # Check, if required environment variables are set
        required_vars=(KBC_STORAGE_API_TOKEN KBC_STORAGE_API_HOST KBC_PROJECT_ID KBC_BRANCH_ID WORKDIR)
        for var in "${required_vars[@]}"; do
          if [ -z "${!var}" ]; then
            echo "Error: Environment variable $var is not set." >&2
            exit 1
          fi
        done
        
        # if forcePush is true, add --force flag
        if [ "${{ inputs.forcePush }}" == "true" ]; then
          echo "Force push enabled"
          FORCE="--force"
        else
          FORCE=""
        fi
        
        # push to Keboola Connection
        echo -e "KBC CLI PUSH to project ${{ inputs.kbcProjectId }} and branch ${{ inputs.kbcBranchId }} log: \n" >> "$RUNNER_TEMP/log.txt"
        kbc push -d "$WORKDIR" --verbose "$FORCE" 2>&1 | tee -a "$RUNNER_TEMP/log.txt"
        echo -e "---------------------------------------------------------------------------- \n\n" >> "$RUNNER_TEMP/log.txt"
      shell: bash
