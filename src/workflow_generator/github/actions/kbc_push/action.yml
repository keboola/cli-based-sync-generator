name: Pushing to Keboola
description: Pushing to Keboola
inputs:
  workdir:
    description: Working directory
    required: true
  kbcStorageApiHost:
    description: Keboola Connection Stack URL
    required: true
  kbcStorageApiToken:
    description: Keboola Connection Storage API Token
    required: true
  kbcProjectId:
    description: Keboola Connection Project ID
    required: true
  kbcBranches:
    description: Keboola Connection Branch ID
    required: true
runs:
  using: "composite"
  steps:
    # Pull remote project's state
    - name: Push to Keboola Connection
      env:
        # filled by the script
        KBC_STORAGE_API_TOKEN: ${{ inputs.kbcStorageApiToken }}
        KBC_PROJECT_ID: ${{ inputs.kbcProjectId }}
        KBC_BRANCHES: ${{ inputs.kbcBranches }}
        KBC_STORAGE_API_HOST: ${{ inputs.kbcStorageApiHost }}
        WORKDIR: ${{ inputs.workdir }}
      # filled by the script
      id: kbc_push
      run: |
        set -eo pipefail

        # Check, if required environment variables are set
        required_vars=(KBC_STORAGE_API_TOKEN KBC_STORAGE_API_HOST KBC_PROJECT_ID KBC_BRANCHES WORKDIR)
        for var in "${required_vars[@]}"; do
          if [ -z "${!var}" ]; then
            echo "Error: Environment variable $var is not set." >&2
            exit 1
          fi
        done
        
        # Temporary directory
        WORKDIR_TMP="$WORKDIR"_tmp
        mkdir -p "$WORKDIR_TMP"
       
        # Need a new .keboola directory
        kbc init -d "$WORKDIR_TMP" --allow-target-env --ci=false 2>&1 | tee "$RUNNER_TEMP/log.txt"
        
        #validation of secure variables
        python3 .github/actions/kbc_push/validations/secure_variable_validation.py "$WORKDIR_TMP"
        
        # Copy .keboola directory
        rsync -av --progress "$WORKDIR_TMP/.keboola" "$WORKDIR/"
        
        # push to Keboola Connection
        kbc push -d "$WORKDIR" --force --verbose 2>&1 | tee "$RUNNER_TEMP/log.txt"
      shell: bash