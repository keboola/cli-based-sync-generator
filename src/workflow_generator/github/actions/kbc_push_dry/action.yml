name: Push - dry run
description: CLI dry run for push
inputs:
  workdir:
    description: Working directory
    required: true
  kbcSapiHost:
    description: Keboola Connection Stack URL
    required: true
  kbcSapiToken:
    description: Keboola Connection Storage API Token
    required: true
  kbcProjectId:
    description: Keboola Connection Project ID
    required: true
  kbcBranchId:
    description: Keboola Connection Branch ID
    required: true
runs:
  using: "composite"
  steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        ref: ${{ github.ref }}

    - name: get random number
      id: random_number
      uses: yakubique/random-number@v1.1
      with:
        min: 1
        max: 1000

    - name: Def out directory
      id: def_dir
      run: |
        echo "OUT_DIR=cli_diff_${{ steps.random_number.outputs.number }}" >> "${GITHUB_ENV}"
      shell: bash

    - name: Def out file
      id: def_file
      run: |
        echo "OUT_FILE=${{ inputs.workdir }}.txt" >> "${GITHUB_ENV}"
      shell: bash

    # Pull remote project's state
    - name: CLI push dry run
      env:
        # filled by the script
        KBC_STORAGE_API_TOKEN: ${{ inputs.kbcSapiToken }}
        KBC_PROJECT_ID: ${{ inputs.kbcProjectId }}
        KBC_BRANCH_ID: ${{ inputs.kbcBranchId }}
        KBC_STORAGE_API_HOST: ${{ inputs.kbcSapiHost }}
        WORKDIR: ${{ inputs.workdir }}
      # filled by the script
      id: kbc_push
      run: |
        set -eo pipefail

        # Check, if required environment variables are set
        required_vars=(KBC_STORAGE_API_TOKEN KBC_STORAGE_API_HOST KBC_PROJECT_ID KBC_BRANCH_ID WORKDIR)
        for var in "${required_vars[@]}"; do
          if [ -z "${!var}" ]; then
            echo "Error: Environment variable $var is not set." >&2
            exit 1
          fi
        done
        
        
        # Dry push to Keboola Connection
        mkdir -p "${{ env.OUT_DIR }}"
        echo -e "CLI Push dry-run output for project ${{ inputs.kbcProjectId }} log:" > "${{ env.OUT_DIR }}/${{ env.OUT_FILE }}"
        echo -e "---------------------------------------------------------------------------- " >> "${{ env.OUT_DIR }}/${{ env.OUT_FILE }}"
        echo -e "\`\`\`" >> "${{ env.OUT_DIR }}/${{ env.OUT_FILE }}"
        if [ ! -d "$WORKDIR" ]; then
            echo -e "Working directory is empty - initial pull\n" >> ${{ env.OUT_DIR }}/${{ env.OUT_FILE }}
        else
           kbc push --dry-run -d "$WORKDIR" 2>&1 | tee -a "${{ env.OUT_DIR }}/${{ env.OUT_FILE }}"
        fi
        echo -e "\`\`\`" >> "${{ env.OUT_DIR }}/${{ env.OUT_FILE }}"
        echo -e "\n---------------------------------------------------------------------------- \n" >> ${{ env.OUT_DIR }}/${{ env.OUT_FILE }}
      shell: bash

    - name: Save output to artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.OUT_DIR }}
        path: ${{ env.OUT_DIR }}/*
        retention-days: 1
