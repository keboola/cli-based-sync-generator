name: Pulling from Keboola
description: Pulling from Keboola
inputs:
  workdir:
    description: Working directory
    required: true
  kbcSapiHost:
    description: Keboola Connection Stack URL
    required: true
  kbcSapiToken:
    description: Keboola Connection Storage API Token
    required: true
  kbcProjectId:
    description: Keboola Connection Project ID
    required: true
  kbcBranchId:
    description: Keboola Connection Branch ID
    required: true
runs:
  using: "composite"
  steps:
    - name: Init data from Keboola connection project
      env:
        KBC_STORAGE_API_TOKEN: ${{ inputs.kbcSapiToken }}
        KBC_PROJECT_ID: ${{ inputs.kbcProjectId }}
        # branches are necessary for kbc init
        KBC_BRANCHES: ${{ inputs.kbcBranchId }}
        # branch_id is necessary for kbc pull
        KBC_BRANCH_ID: ${{ inputs.kbcBranchId }}
        KBC_STORAGE_API_HOST: ${{ inputs.kbcSapiHost }}
        WORKDIR: ${{ inputs.workdir }}

      id: kbc_init
      run: |
        set -eo pipefail

        # Check, if required environment variables are set
        required_vars=(KBC_STORAGE_API_TOKEN KBC_STORAGE_API_HOST KBC_PROJECT_ID KBC_BRANCH_ID WORKDIR)
        for var in "${required_vars[@]}"; do
          if [ -z "${!var}" ]; then
            echo "Error: Environment variable $var is not set." >&2
            exit 1
          fi
        done

         # Init data from Keboola connection project
        echo -e "KBC CLI PULL from project ${{ inputs.kbcProjectId }} and branch ${{ inputs.kbcBranchId }} log:" >> "./log.txt"
        echo -e "---------------------------------------------------------------------------- " >> "./log.txt"
        echo -e "\`\`\`" >> "./log.txt"
        
        if [ -f "$WORKDIR/.keboola/manifest.json" ]; then
          echo "Manifest file exists, pulling"
          kbc persist -d "$WORKDIR" --verbose 2>&1 | tee -a "./log.txt"
          kbc pull -d "$WORKDIR" --force --verbose 2>&1 | tee -a "./log.txt"
        else
          echo "Manifest file not exists, initialization"
          # if not exists $WORKDIR create it
          if [ ! -d "$WORKDIR" ]; then
            mkdir -p "$WORKDIR"
          fi
          kbc init -d "$WORKDIR" --allow-target-env --ci=false --verbose 2>&1 | tee -a "./log.txt"
        fi

        echo -e "\`\`\`" >> "./log.txt"
        echo -e "\n---------------------------------------------------------------------------- \n" >> "./log.txt"
        
        echo -e "Secrets validation for project ${{ inputs.kbcProjectId }} and branch ${{ inputs.kbcBranchId }} log:" >> "./log.txt"
        echo -e "---------------------------------------------------------------------------- \n" >> "./log.txt"
        python3 .github/actions/kbc_pull/secret_validations/validation.py target_dir="$WORKDIR" 2>&1 | tee -a "./log.txt" 
        echo -e "\n---------------------------------------------------------------------------- \n" >> "./log.txt"

      shell: bash
