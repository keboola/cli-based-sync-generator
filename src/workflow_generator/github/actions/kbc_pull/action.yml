name: Pulling from Keboola
description: Pulling from Keboola
inputs:
  workdir:
    description: Working directory
    required: true
  kbcStorageApiHost:
    description: Keboola Connection Stack URL
    required: true
  kbcStorageApiToken:
    description: Keboola Connection Storage API Token
    required: true
  kbcProjectId:
    description: Keboola Connection Project ID
    required: true
  kbcBranchId:
    description: Keboola Connection Branch ID
    required: true
runs:
  using: "composite"
  steps:
    # Pull remote project's state
    - name: Init data from Keboola connection project
      env:
        # filled by the script
        KBC_STORAGE_API_TOKEN: ${{ inputs.kbcStorageApiToken }}
        KBC_PROJECT_ID: ${{ inputs.kbcProjectId }}
        KBC_BRANCH_ID: ${{ inputs.kbcBranchId }}
        KBC_STORAGE_API_HOST: ${{ inputs.kbcStorageApiHost }}
        WORKDIR: ${{ inputs.workdir }}
      # filled by the script
      id: kbc_init
      run: |
        set -eo pipefail

        # Check, if required environment variables are set
        required_vars=(KBC_STORAGE_API_TOKEN KBC_STORAGE_API_HOST KBC_PROJECT_ID KBC_BRANCH_ID WORKDIR)
        for var in "${required_vars[@]}"; do
          if [ -z "${!var}" ]; then
            echo "Error: Environment variable $var is not set." >&2
            exit 1
          fi
        done
        
        # Working directory is ready and empty
        if [ ! -d "$WORKDIR" ]; then
          mkdir -p "$WORKDIR"
        else
            if [ -n "$WORKDIR" ] && [ "$WORKDIR" != "/" ]; then
                rm -rf "$WORKDIR"
                mkdir -p "$WORKDIR"
            fi
        fi
        
        # Init data from Keboola connection project
        kbc init -d "$WORKDIR" --allow-target-env --ci=false 2>&1 | tee "$RUNNER_TEMP/log.txt"

      shell: bash
